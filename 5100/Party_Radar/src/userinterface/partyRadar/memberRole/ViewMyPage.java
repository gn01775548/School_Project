/*
 * BrowseProducts.java
 *
 * Created on October 10, 2008, 9:10 AM
 */
package userinterface.partyRadar.memberRole;


import Business.Campus.Campus;
import Business.CampusParty;
import Business.Enterprise.Enterprise;
import Business.InformationQueue.EventPost;
import Business.InformationQueue.InformationPost;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreeSelectionModel;


/**
 *
 * @author
 */
public class ViewMyPage extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Campus campus;
    private CampusParty business;
    /** Creates new form BrowseProducts */
    
    public ViewMyPage(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount, Campus campus, CampusParty business) {

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.campus = campus;
        this.business = business;
        
        lblName.setText(userAccount.getMember().getName());
        lblNoFollowers.setText(String.valueOf(userAccount.getFollowerList().size()));
        lblNoFollowings.setText(String.valueOf(userAccount.getFollowingList().size()));
        
        populateEvent();
        populateTree();
       // dec.09 rita
        populateLbl();
        
    }
    
    // dec.09 rita:
    public void populateLbl(){
        
        lblName.setText(userAccount.getMember().getName());
        lblNoFollowers.setText(String.valueOf(userAccount.getFollowerList().size()));
        lblNoFollowings.setText(String.valueOf(userAccount.getFollowingList().size()));
        
    }
    
    public void populateTree(){
        DefaultTreeModel model=(DefaultTreeModel)connectionTree.getModel();
        DefaultMutableTreeNode root=(DefaultMutableTreeNode)model.getRoot();

        root.removeAllChildren();
               
        DefaultMutableTreeNode followingsNode = new DefaultMutableTreeNode("Followings");
        DefaultMutableTreeNode followersNode = new DefaultMutableTreeNode("Followers");

        root.add(followingsNode);
        root.add(followersNode);
              
        DefaultMutableTreeNode followings;
        DefaultMutableTreeNode followers;
        
        for(int i=0;i<userAccount.getFollowingList().size();i++){
            UserAccount f = userAccount.getFollowingList().get(i);
            followings=new DefaultMutableTreeNode(f);
            followingsNode.insert(followings, i);
            }
        
        for(int j=0;j<userAccount.getFollowerList().size();j++){
            UserAccount m = userAccount.getFollowerList().get(j);
            followers=new DefaultMutableTreeNode(m);
            followersNode.insert(followers, j);
            }
        
        // Rita: customize picture
        DefaultTreeCellRenderer render=(DefaultTreeCellRenderer )connectionTree.getCellRenderer(); 
        render.setClosedIcon(new ImageIcon(this.getClass().getResource("user.png")));
        render.setOpenIcon(new ImageIcon(this.getClass().getResource("user.png")));
        render.setLeafIcon(new ImageIcon(this.getClass().getResource("user.png")));
        
        connectionTree.putClientProperty("JTree.lineStyle", "Horizontal");
        
        connectionTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        connectionTree.setRootVisible(false);

        model.reload(root);
    }

    private void populateEvent(){
        DefaultTableModel model = (DefaultTableModel) tblEvent.getModel();
        model.setRowCount(0);
        
        for (InformationPost infoPost : userAccount.getInfoQueue().getInfoPostList()){
            if(infoPost instanceof EventPost){
                EventPost post = (EventPost) infoPost;
                Object[] row = new Object[4];
                row[0] = post;
                row[1] = post.getDate();
                row[2] = post.getvPost().toString();
                row[3] = post.getAvailableSpot();
                
                model.addRow(row);
            }
        }
    }

      
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        productTable2 = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lblNoFollowers = new javax.swing.JLabel();
        btnInvite = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblEvent = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        btnUnFollow = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtSearchName = new javax.swing.JTextField();
        lblNoFollowings = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        btnViewPage = new javax.swing.JButton();
        btnViewEventDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        connectionTree = new javax.swing.JTree();
        btnFollow2 = new javax.swing.JButton();
        btnFollow1 = new javax.swing.JButton();
        lblHeader2 = new javax.swing.JLabel();
        lblHeader3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbFavoriteEvent = new javax.swing.JTable();
        btnViewFvDetails = new javax.swing.JButton();

        productTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        productTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Product Id", "Price", "Avail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(productTable2);

        setBackground(new java.awt.Color(250, 250, 250));
        setAlignmentX(50.0F);
        setPreferredSize(new java.awt.Dimension(750, 1000));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/return-arrow.png"))); // NOI18N
        btnBack.setBorder(null);
        btnBack.setBorderPainted(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 750, 90, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("followers");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 60, 20));

        lblNoFollowers.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNoFollowers.setForeground(new java.awt.Color(102, 102, 102));
        lblNoFollowers.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNoFollowers.setText("#");
        lblNoFollowers.setAlignmentX(50.0F);
        add(lblNoFollowers, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 20, 20));

        btnInvite.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnInvite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/email.png"))); // NOI18N
        btnInvite.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnInvite.setMaximumSize(new java.awt.Dimension(40, 40));
        btnInvite.setMinimumSize(new java.awt.Dimension(40, 40));
        btnInvite.setPreferredSize(new java.awt.Dimension(40, 40));
        btnInvite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInviteActionPerformed(evt);
            }
        });
        add(btnInvite, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, 40, 30));

        tblEvent.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblEvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "My Event", "Event Time", "Venue", "Available Spots"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEvent.setAlignmentX(50.0F);
        jScrollPane6.setViewportView(tblEvent);

        add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 510, 110));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 150, -1));

        btnUnFollow.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUnFollow.setForeground(new java.awt.Color(245, 245, 245));
        btnUnFollow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/unfollow_24.png"))); // NOI18N
        btnUnFollow.setBorder(null);
        btnUnFollow.setBorderPainted(false);
        btnUnFollow.setMaximumSize(new java.awt.Dimension(40, 40));
        btnUnFollow.setMinimumSize(new java.awt.Dimension(40, 40));
        btnUnFollow.setPreferredSize(new java.awt.Dimension(40, 40));
        btnUnFollow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnFollowActionPerformed(evt);
            }
        });
        add(btnUnFollow, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 670, 40, 30));

        lblName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(102, 102, 102));
        lblName.setText("<show Name>");
        lblName.setAlignmentX(50.0F);
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 150, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("followings");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 70, 20));
        add(txtSearchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 150, -1));

        lblNoFollowings.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNoFollowings.setForeground(new java.awt.Color(102, 102, 102));
        lblNoFollowings.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNoFollowings.setText("#");
        add(lblNoFollowings, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, 20, 20));

        btnRefresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/refresh.png"))); // NOI18N
        btnRefresh.setBorder(null);
        btnRefresh.setBorderPainted(false);
        btnRefresh.setMaximumSize(new java.awt.Dimension(40, 40));
        btnRefresh.setMinimumSize(new java.awt.Dimension(40, 40));
        btnRefresh.setPreferredSize(new java.awt.Dimension(40, 40));
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 40, 30));

        btnViewPage.setBackground(new java.awt.Color(245, 245, 245));
        btnViewPage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnViewPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/search.png"))); // NOI18N
        btnViewPage.setBorder(null);
        btnViewPage.setBorderPainted(false);
        btnViewPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPageActionPerformed(evt);
            }
        });
        add(btnViewPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 670, 40, 30));

        btnViewEventDetails.setBackground(new java.awt.Color(245, 245, 245));
        btnViewEventDetails.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnViewEventDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/search.png"))); // NOI18N
        btnViewEventDetails.setBorder(null);
        btnViewEventDetails.setBorderPainted(false);
        btnViewEventDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEventDetailsActionPerformed(evt);
            }
        });
        add(btnViewEventDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 40, 30));

        connectionTree.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        connectionTree.setForeground(new java.awt.Color(255, 255, 255));
        connectionTree.setAlignmentX(50.0F);
        connectionTree.setDropMode(javax.swing.DropMode.ON);
        connectionTree.setRowHeight(27);
        connectionTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                connectionTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(connectionTree);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, 510, 120));

        btnFollow2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFollow2.setForeground(new java.awt.Color(255, 255, 255));
        btnFollow2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/follower_24.png"))); // NOI18N
        btnFollow2.setBorder(null);
        btnFollow2.setBorderPainted(false);
        btnFollow2.setMaximumSize(new java.awt.Dimension(40, 40));
        btnFollow2.setMinimumSize(new java.awt.Dimension(40, 40));
        btnFollow2.setPreferredSize(new java.awt.Dimension(40, 40));
        btnFollow2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFollow2ActionPerformed(evt);
            }
        });
        add(btnFollow2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 670, 40, 30));

        btnFollow1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFollow1.setForeground(new java.awt.Color(255, 255, 255));
        btnFollow1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/follower_24.png"))); // NOI18N
        btnFollow1.setBorder(null);
        btnFollow1.setBorderPainted(false);
        btnFollow1.setMaximumSize(new java.awt.Dimension(40, 40));
        btnFollow1.setMinimumSize(new java.awt.Dimension(40, 40));
        btnFollow1.setPreferredSize(new java.awt.Dimension(40, 40));
        btnFollow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFollow1ActionPerformed(evt);
            }
        });
        add(btnFollow1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 40, 30));

        lblHeader2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblHeader2.setForeground(new java.awt.Color(204, 0, 0));
        lblHeader2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/logo.png"))); // NOI18N
        lblHeader2.setPreferredSize(new java.awt.Dimension(400, 124));
        add(lblHeader2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 260, 70));

        lblHeader3.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblHeader3.setForeground(new java.awt.Color(204, 0, 0));
        lblHeader3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/conncection.png"))); // NOI18N
        lblHeader3.setAlignmentX(50.0F);
        lblHeader3.setPreferredSize(new java.awt.Dimension(400, 124));
        add(lblHeader3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 520, 120, 30));

        tbFavoriteEvent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Event Name", "Event Time", "Venue", "Available Spots"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbFavoriteEvent);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 510, 110));

        btnViewFvDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/search.png"))); // NOI18N
        btnViewFvDetails.setBorder(null);
        btnViewFvDetails.setBorderPainted(false);
        btnViewFvDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFvDetailsActionPerformed(evt);
            }
        });
        add(btnViewFvDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 470, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnInviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInviteActionPerformed

        // TODO add your handling code here:
        int selectRow = tblEvent.getSelectedRow();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            EventPost post = (EventPost)tblEvent.getValueAt(selectRow,0);
            for (InformationPost infoPost : business.getMasterEventPostDirectory()){
                
                if (post == infoPost){
                    int eventId = post.getId();
                    InvitePanel panel = new InvitePanel(userProcessContainer, enterprise, post, userAccount, business);
                    userProcessContainer.add("InvitePanel", panel);
                    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                    layout.next(userProcessContainer);
                }
            }
            
        }
    }//GEN-LAST:event_btnInviteActionPerformed

    private void btnUnFollowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnFollowActionPerformed
        // TODO add your handling code here:
        
        TreeNode selectNode = (TreeNode) connectionTree.getLastSelectedPathComponent();
        if (selectNode == null){
            JOptionPane.showMessageDialog(null,"Please select a following first.");
            
        }
        else{
            String selectName = selectNode.toString();
            
            for (int i = 0; i < userAccount.getFollowingList().size();i++){
                if (selectName == userAccount.getFollowingList().get(i).getMember().getName()){
                    userAccount.unfollow(userAccount.getFollowingList().get(i));
                    JOptionPane.showMessageDialog(null, "Successfully unfollowed!");
                    populateTree();
                    lblNoFollowings.setText(String.valueOf(userAccount.getFollowingList().size()));
                }
                else {
                    JOptionPane.showMessageDialog(null,"Please select a following to process.");
                }
            }
            
        }
          
        
        
    }//GEN-LAST:event_btnUnFollowActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateEvent();

    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnViewPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPageActionPerformed
        // TODO add your handling code here:

    int selectRow = connectionTree.getSelectionCount();
        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from your Following List first to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        } else 
        {          
            TreeNode selectNode = (TreeNode) connectionTree.getLastSelectedPathComponent();
            String selectName = selectNode.toString();

            //// dec.09 rita
            ArrayList<UserAccount> followingList = userAccount.getFollowingList();            

            // Rita: find the selected userAccount
            UserAccount selectUser = null;
                if (business.getSearchMemberArrayList(selectName).size()>0){
                    selectUser = business.getSearchMemberArrayList(selectName).get(0);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Please select a user name to process!");
                }
            //// dec.09 rita
            
            // Rita: turn to selectUser's page
            if (selectUser != null){
                ViewOthersPage panel = new ViewOthersPage(userProcessContainer, enterprise, userAccount, selectUser);
                userProcessContainer.add("ViewOthersPage", panel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);  
            }
            else{
                JOptionPane.showMessageDialog(null, "Cannot find the user in your connection list!");
            }
        }
        
    }//GEN-LAST:event_btnViewPageActionPerformed

    private void btnViewEventDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEventDetailsActionPerformed
        // TODO add your handling code here:
        int selectRow = tblEvent.getSelectedRow();

        
        if(selectRow <0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first to view detials", "Warning", JOptionPane.WARNING_MESSAGE);            
        } 
        else{
            EventPost post = (EventPost) tblEvent.getValueAt(selectRow, 0);
           
            ViewEventDetails panel = new ViewEventDetails(userProcessContainer, enterprise, post, userAccount, business);
            userProcessContainer.add("ViewEventDetails", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_btnViewEventDetailsActionPerformed

    private void btnFollow2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFollow2ActionPerformed
        
        TreeNode selectNode = (TreeNode) connectionTree.getLastSelectedPathComponent();
        if (selectNode == null){
            JOptionPane.showMessageDialog(null, "Please select a following first.");
        }
        else{       
            String selectName = selectNode.toString();    
            
            // Rita: get followingName List
            ArrayList<String> followingNameList = new ArrayList<String>();
            for (UserAccount followingU: userAccount.getFollowingList()){
                followingNameList.add(followingU.getMember().getName());
                }
        
            // Rita: get searched result list
            ArrayList<UserAccount> searchList = business.getSearchMemberArrayList(selectName);
        
            // if name not in the system
            if (searchList.isEmpty()){
                JOptionPane.showMessageDialog(null, "No matched member name.");
            }
            // if name in the system
            else {
                // name is already in the followingNameList
                if (followingNameList.indexOf(selectName)>=0){
                    JOptionPane.showMessageDialog(null, "You are already following " + selectName + ".");
                }
                // name is the User's name
                else if (selectName.equalsIgnoreCase(userAccount.toString())){
                    JOptionPane.showMessageDialog(null, "You cannot follow yourself.");
                }
                // name is not in the followingNameList
                else{
                    userAccount.follow(searchList.get(0));
                    JOptionPane.showMessageDialog(null, "You are following " + selectName + " now!");  
                    populateTree();
                    lblNoFollowings.setText(String.valueOf(userAccount.getFollowingList().size()));
                }
            }
               
        }
    }//GEN-LAST:event_btnFollow2ActionPerformed

    private void btnFollow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFollow1ActionPerformed
        // TODO add your handling code here:
        String searchName =  txtSearchName.getText().trim();
        
        // Rita: get followingNameList
        ArrayList<String> followingNameList = new ArrayList<String>();
        for (UserAccount followingU: userAccount.getFollowingList()){
            followingNameList.add(followingU.getMember().getName());
        }
        
        // Rita: get searched result list
        ArrayList<UserAccount> searchList = business.getSearchMemberArrayList(searchName);
        
        // if name not in the system
        if (searchList.isEmpty()){
            JOptionPane.showMessageDialog(null, "No matched member name.");
        }
        // if name in the system
        else {
            // name is already in the followingNameList

            if (followingNameList.indexOf(searchName)>=0){
                JOptionPane.showMessageDialog(null, "You are already following " + searchName + ".");
            }
            // name is the User's name
            else if (searchName.equalsIgnoreCase(userAccount.toString())){

                JOptionPane.showMessageDialog(null, "You cannot follow yourself.");
            }
            // name is not in the followingNameList
            else{
                JOptionPane.showMessageDialog(null, "You are following " + searchName + " now!");  

                userAccount.follow(searchList.get(0));
                populateTree();
                lblNoFollowings.setText(String.valueOf(userAccount.getFollowingList().size()));
            }
        }

    }//GEN-LAST:event_btnFollow1ActionPerformed

    private void connectionTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_connectionTreeValueChanged

    }//GEN-LAST:event_connectionTreeValueChanged

    private void btnViewFvDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFvDetailsActionPerformed
        int selectRow = tbFavoriteEvent.getSelectedRow();
        if(selectRow <0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first to view detials", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            EventPost post = (EventPost) tbFavoriteEvent.getValueAt(selectRow, 0);

            ViewEventDetails panel = new ViewEventDetails(userProcessContainer, enterprise, post, userAccount, business);
            userProcessContainer.add("ViewEventDetails", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewFvDetailsActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFollow1;
    private javax.swing.JButton btnFollow2;
    private javax.swing.JButton btnInvite;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUnFollow;
    private javax.swing.JButton btnViewEventDetails;
    private javax.swing.JButton btnViewFvDetails;
    private javax.swing.JButton btnViewPage;
    private javax.swing.JTree connectionTree;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblHeader2;
    private javax.swing.JLabel lblHeader3;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNoFollowers;
    private javax.swing.JLabel lblNoFollowings;
    private javax.swing.JTable productTable2;
    private javax.swing.JTable tbFavoriteEvent;
    private javax.swing.JTable tblEvent;
    private javax.swing.JTextField txtSearchName;
    // End of variables declaration//GEN-END:variables
}
