
package userinterface.partyRadar.EventManagerRole;

import Business.Campus.Campus;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Venue;
import Business.Enterprise.VenueRadarEnterprise;
import Business.Group.EventManagerGroup;
import Business.Group.Group;
import Business.Group.VenueBookingManagerGroup;
import Business.InformationQueue.EventPost;
import Business.InformationQueue.InformationPost;
import Business.InformationQueue.MaintainanceRequestPost;
import Business.InformationQueue.VenueRequestPost;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class BrowseVenuePanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount account;
    private EventManagerGroup group;
    private Enterprise enterprise;
    private Campus campus;
    private String date;
    private InformationPost ePost;

    /** Creates new form BrowseProducts */
    public BrowseVenuePanel(JPanel userProcessContainer, UserAccount account, EventManagerGroup group, Enterprise enterprise, Campus campus, String date, InformationPost ePost) {
        
        
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.group = group;
        this.enterprise = enterprise;
        this.campus = campus;
        this.date = date;
        this.ePost = ePost;
        txtDate.setText(date);
        refreshTable();
        valueLabel.setText(enterprise.getName());
      
    }

    
    
    
    public void refreshTable(){
        
        // dec.09 rita:
        Date d = new Date();
        
        DefaultTableModel model = (DefaultTableModel)tblVenue.getModel();
        model.setRowCount(0);
        
        // dec.09 rita:
        try{       
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            dateFormat.setLenient(false);
            
            d = dateFormat.parse(date);

          } 
        catch(ParseException e){
            JOptionPane.showMessageDialog(null, "Please follow valide date format!");
        }
        
            ArrayList<Enterprise> enterpriseList =  campus.getEnterpriseDirectory().getEnterpriseList();
            for (Enterprise e: enterpriseList){
                if (e instanceof VenueRadarEnterprise){
                    ArrayList<Venue> venueList = ((VenueRadarEnterprise )e).getVenueDirectory().getVenueDirectory();
                    for (Venue v: venueList){
                        if (v.getVenueCalender().getDateMap().get(d) == 0){
                         Object[] row = new Object[4];
                         row[0] = v;
                         row[1] = v.getVenueName();
                         row[2] = v.getLabel();
                         row[3] = v.getLocation();

                         model.addRow(row);
                        }
                    }
                }
            }
    }

    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        productTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnCatering = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblVenue = new javax.swing.JTable();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        btnBook = new javax.swing.JButton();
        lblHeader2 = new javax.swing.JLabel();
        lblHeader1 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        productTable2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        productTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Product Id", "Price", "Avail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(productTable2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Venue Label");

        setBackground(new java.awt.Color(250, 250, 250));
        setPreferredSize(new java.awt.Dimension(750, 1000));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCatering.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCatering.setText("Next >>");
        btnCatering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCateringActionPerformed(evt);
            }
        });
        add(btnCatering, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 690, 100, 30));

        tblVenue.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblVenue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Venue ID", "Venue Name", "Label", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblVenue);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 480, 250));

        lblDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDate.setText("Date");
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 110, 30));

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 110, -1));

        btnBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });
        add(btnBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 550, 140, 30));

        lblHeader2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblHeader2.setForeground(new java.awt.Color(204, 0, 0));
        lblHeader2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/partyRadar/memberRole/logo.png"))); // NOI18N
        lblHeader2.setPreferredSize(new java.awt.Dimension(400, 124));
        add(lblHeader2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 260, 70));

        lblHeader1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblHeader1.setForeground(new java.awt.Color(102, 102, 102));
        lblHeader1.setText("Venue Booking");
        add(lblHeader1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 150, -1));

        valueLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        valueLabel.setForeground(new java.awt.Color(102, 102, 102));
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCateringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCateringActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("CateringOptionPanel", new CateringOptionPanel(userProcessContainer,account, group, enterprise, campus, txtDate.getText(),ePost));
        layout.next(userProcessContainer);
        

    }//GEN-LAST:event_btnCateringActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
       int selectedRow = tblVenue.getSelectedRow();
        try{            
            if (selectedRow < 0){
                JOptionPane.showMessageDialog(null, "Please select a row to process!");}
            else{
                InformationPost vPost = new VenueRequestPost();
                Venue v = (Venue) tblVenue.getValueAt(selectedRow,0);

                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                dateFormat.setLenient(false);

                Date nDate = dateFormat.parse(date);

                ((VenueRequestPost)vPost).setVenue(v);
                vPost.setSender(account);
                vPost.setStatus("Venue Requested");
                vPost.setDate(nDate);
                vPost.setMessage(v.getVenueName());
                ((EventPost)ePost).setvPost((VenueRequestPost) vPost);
                

                Group gro = null;
                for (Enterprise e : campus.getEnterpriseDirectory().getEnterpriseList()){
                    for (Group group: e.getGroupDirectory().getGroupList()){                
                        if (group instanceof VenueBookingManagerGroup){
                            gro = group;
                            break;
                        }
                    }
                if (gro!=null){          
                    gro.getInfoQueue().getInfoPostList().add(vPost);
//                    account.getInfoQueue().getInfoPostList().add(vPost);               
                    }            
                }
                JOptionPane.showMessageDialog(null, "Venue booking request sent!");
            }
        }
        catch(ParseException e){
            JOptionPane.showMessageDialog(null, "Please follow valide date format!");
        }
    }//GEN-LAST:event_btnBookActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnCatering;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblHeader1;
    private javax.swing.JLabel lblHeader2;
    private javax.swing.JTable productTable2;
    private javax.swing.JTable tblVenue;
    private javax.swing.JTextField txtDate;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
